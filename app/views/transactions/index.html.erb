<% content_for(:title, t('activerecord.models.transaction.other')) %>

<div class="content">
  <!-- content has a set of cards and map -->
  <div class="row" style="width: 60vw">
    <div class="col-xs-12">
      <!-- This is tab section -->
      <ul class="nav nav-tabs" style="background-color: white">
        <br>
        <li class="nav-item">
          <a href="#transactions" class="nav-link active" role="tab" data-toggle="tab">All</a>
        </li>
        <li class="nav-item">
          <a href="#proposed_transactions" class="nav-link" role="tab" data-toggle="tab">Proposed</a>
        </li>
        <li class="nav-item">
          <a href="#accepted_transactions" class="nav-link" role="tab" data-toggle="tab">Accepted</a>
        </li>
        <li class="nav-item">
          <a href="#removed_transactions" class="nav-link" role="tab" data-toggle="tab">Removed</a>
        </li>
      </ul>
    </div>
    <!-- this is tab contents section -->
    <div class="tab-content">
      <div role="tabpanel" class="tab-pane fade in active" id="transactions">
      <br>
        <div class="cards-holder">
            <%= render 'transaction', transactions:@transactions %>
        </div>
      </div>
      <div role="tabpanel" class="tab-pane fade" id="proposed_transactions">
        <div class="cards-holder">
            <%= render 'transaction', transactions:@proposed_transactions %>
        </div>
      </div>
      <div role="tabpanel" class="tab-pane fade" id="accepted_transactions">
        <div class="cards-holder">
            <%= render 'transaction', transactions:@accepted_transactions %>
        </div>
      </div>
      <div role="tabpanel" class="tab-pane fade" id="removed_transactions">
        <div class="cards-holder">
            <%= render 'transaction', transactions:@removed_transactions %>
        </div>
      </div>
    </div>
  </div>
    <!-- render map -->
  <div id="map" style="position: relative; width: 40vw"></div>
</div>

<% content_for(:after_js) do %>
  <%= javascript_tag do %>
    $(document).ready(function() {
      var handler = Gmaps.build('Google');
      handler.buildMap({ internal: { id: 'map' } }, function() {
        markers = handler.addMarkers(<%= raw @hash.to_json %>);
        handler.bounds.extendWith(markers);
        handler.fitMapToBounds();
        if (markers.length == 0) {
          handler.getMap().setZoom(2);
        } else if (markers.length == 1) {
          handler.getMap().setZoom(14);
        }
      });
    });
  <% end %>
<% end %>
